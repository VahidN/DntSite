/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/quill@2.0.3/blots/block.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{AttributorStore,BlockBlot,EmbedBlot,LeafBlot,Scope}from"parchment";import Delta from"quill-delta";import Break from"./break.js";import Inline from"./inline.js";import TextBlot from"./text.js";const NEWLINE_LENGTH=1;class Block extends BlockBlot{cache={};delta(){return null==this.cache.delta&&(this.cache.delta=blockDelta(this)),this.cache.delta}deleteAt(t,e){super.deleteAt(t,e),this.cache={}}formatAt(t,e,l,r){e<=0||(this.scroll.query(l,Scope.BLOCK)?t+e===this.length()&&this.format(l,r):super.formatAt(t,Math.min(e,this.length()-t-1),l,r),this.cache={})}insertAt(t,e,l){if(null!=l)return super.insertAt(t,e,l),void(this.cache={});if(0===e.length)return;const r=e.split("\n"),s=r.shift();s.length>0&&(t<this.length()-1||null==this.children.tail?super.insertAt(Math.min(t,this.length()-1),s):this.children.tail.insertAt(this.children.tail.length(),s),this.cache={});let i=this;r.reduce(((t,e)=>(i=i.split(t,!0),i.insertAt(0,e),e.length)),t+s.length)}insertBefore(t,e){const{head:l}=this.children;super.insertBefore(t,e),l instanceof Break&&l.remove(),this.cache={}}length(){return null==this.cache.length&&(this.cache.length=super.length()+1),this.cache.length}moveChildren(t,e){super.moveChildren(t,e),this.cache={}}optimize(t){super.optimize(t),this.cache={}}path(t){return super.path(t,!0)}removeChild(t){super.removeChild(t),this.cache={}}split(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(e&&(0===t||t>=this.length()-1)){const e=this.clone();return 0===t?(this.parent.insertBefore(e,this),this):(this.parent.insertBefore(e,this.next),e)}const l=super.split(t,e);return this.cache={},l}}Block.blotName="block",Block.tagName="P",Block.defaultChild=Break,Block.allowedChildren=[Break,Inline,EmbedBlot,TextBlot];class BlockEmbed extends EmbedBlot{attach(){super.attach(),this.attributes=new AttributorStore(this.domNode)}delta(){return(new Delta).insert(this.value(),{...this.formats(),...this.attributes.values()})}format(t,e){const l=this.scroll.query(t,Scope.BLOCK_ATTRIBUTE);null!=l&&this.attributes.attribute(l,e)}formatAt(t,e,l,r){this.format(l,r)}insertAt(t,e,l){if(null!=l)return void super.insertAt(t,e,l);const r=e.split("\n"),s=r.pop(),i=r.map((t=>{const e=this.scroll.create(Block.blotName);return e.insertAt(0,t),e})),n=this.split(t);i.forEach((t=>{this.parent.insertBefore(t,n)})),s&&this.parent.insertBefore(this.scroll.create("text",s),n)}}function blockDelta(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return t.descendants(LeafBlot).reduce(((t,l)=>0===l.length()?t:t.insert(l.value(),bubbleFormats(l,{},e))),new Delta).insert("\n",bubbleFormats(t))}function bubbleFormats(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},l=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return null==t?e:("formats"in t&&"function"==typeof t.formats&&(e={...e,...t.formats()},l&&delete e["code-token"]),null==t.parent||"scroll"===t.parent.statics.blotName||t.parent.statics.scope!==t.statics.scope?e:bubbleFormats(t.parent,e,l))}BlockEmbed.scope=Scope.BLOCK_BLOT;export{blockDelta,bubbleFormats,BlockEmbed,Block as default};
//# sourceMappingURL=/sm/ec7900b819dbfdbc8ec870d50fecd5e86606c4479d986d2b80e399c7164518fc.map