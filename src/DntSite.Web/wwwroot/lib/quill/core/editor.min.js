/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/quill@2.0.3/core/editor.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{cloneDeep,isEqual,merge}from"lodash-es";import{LeafBlot,EmbedBlot,Scope,ParentBlot}from"parchment";import Delta,{AttributeMap,Op}from"quill-delta";import Block,{BlockEmbed,bubbleFormats}from"../blots/block.js";import Break from"../blots/break.js";import CursorBlot from"../blots/cursor.js";import TextBlot,{escapeText}from"../blots/text.js";import{Range}from"./selection.js";const ASCII=/^[ -~]*$/;class Editor{constructor(t){this.scroll=t,this.delta=this.getDelta()}applyDelta(t){this.scroll.update();let e=this.scroll.length();this.scroll.batchStart();const n=normalizeDelta(t),r=new Delta;return splitOpLines(n.ops.slice()).reduce(((t,n)=>{const s=Op.length(n);let l=n.attributes||{},i=!1,o=!1;if(null!=n.insert){if(r.retain(s),"string"==typeof n.insert){const r=n.insert;o=!r.endsWith("\n")&&(e<=t||!!this.scroll.descendant(BlockEmbed,t)[0]),this.scroll.insertAt(t,r);const[s,i]=this.scroll.line(t);let c=merge({},bubbleFormats(s));if(s instanceof Block){const[t]=s.descendant(LeafBlot,i);t&&(c=merge(c,bubbleFormats(t)))}l=AttributeMap.diff(c,l)||{}}else if("object"==typeof n.insert){const r=Object.keys(n.insert)[0];if(null==r)return t;const s=null!=this.scroll.query(r,Scope.INLINE);if(s)(e<=t||this.scroll.descendant(BlockEmbed,t)[0])&&(o=!0);else if(t>0){const[e,n]=this.scroll.descendant(LeafBlot,t-1);if(e instanceof TextBlot){"\n"!==e.value()[n]&&(i=!0)}else e instanceof EmbedBlot&&e.statics.scope===Scope.INLINE_BLOT&&(i=!0)}if(this.scroll.insertAt(t,r,n.insert[r]),s){const[e]=this.scroll.descendant(LeafBlot,t);if(e){const t=merge({},bubbleFormats(e));l=AttributeMap.diff(t,l)||{}}}}e+=s}else if(r.push(n),null!==n.retain&&"object"==typeof n.retain){const e=Object.keys(n.retain)[0];if(null==e)return t;this.scroll.updateEmbedAt(t,e,n.retain[e])}Object.keys(l).forEach((e=>{this.scroll.formatAt(t,s,e,l[e])}));const c=i?1:0,a=o?1:0;return e+=c+a,r.retain(c),r.delete(a),t+s+c+a}),0),r.reduce(((t,e)=>"number"==typeof e.delete?(this.scroll.deleteAt(t,e.delete),t):t+Op.length(e)),0),this.scroll.batchEnd(),this.scroll.optimize(),this.update(n)}deleteText(t,e){return this.scroll.deleteAt(t,e),this.update((new Delta).retain(t).delete(e))}formatLine(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.scroll.update(),Object.keys(n).forEach((r=>{this.scroll.lines(t,Math.max(e,1)).forEach((t=>{t.format(r,n[r])}))})),this.scroll.optimize();const r=(new Delta).retain(t).retain(e,cloneDeep(n));return this.update(r)}formatText(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.keys(n).forEach((r=>{this.scroll.formatAt(t,e,r,n[r])}));const r=(new Delta).retain(t).retain(e,cloneDeep(n));return this.update(r)}getContents(t,e){return this.delta.slice(t,t+e)}getDelta(){return this.scroll.lines().reduce(((t,e)=>t.concat(e.delta())),new Delta)}getFormat(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=[],r=[];0===e?this.scroll.path(t).forEach((t=>{const[e]=t;e instanceof Block?n.push(e):e instanceof LeafBlot&&r.push(e)})):(n=this.scroll.lines(t,e),r=this.scroll.descendants(LeafBlot,t,e));const[s,l]=[n,r].map((t=>{const e=t.shift();if(null==e)return{};let n=bubbleFormats(e);for(;Object.keys(n).length>0;){const e=t.shift();if(null==e)return n;n=combineFormats(bubbleFormats(e),n)}return n}));return{...s,...l}}getHTML(t,e){const[n,r]=this.scroll.line(t);if(n){const s=n.length();return!(n.length()>=r+e)||0===r&&e===s?convertHTML(this.scroll,t,e,!0):convertHTML(n,r,e,!0)}return""}getText(t,e){return this.getContents(t,e).filter((t=>"string"==typeof t.insert)).map((t=>t.insert)).join("")}insertContents(t,e){const n=normalizeDelta(e),r=(new Delta).retain(t).concat(n);return this.scroll.insertContents(t,n),this.update(r)}insertEmbed(t,e,n){return this.scroll.insertAt(t,e,n),this.update((new Delta).retain(t).insert({[e]:n}))}insertText(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return e=e.replace(/\r\n/g,"\n").replace(/\r/g,"\n"),this.scroll.insertAt(t,e),Object.keys(n).forEach((r=>{this.scroll.formatAt(t,e.length,r,n[r])})),this.update((new Delta).retain(t).insert(e,cloneDeep(n)))}isBlank(){if(0===this.scroll.children.length)return!0;if(this.scroll.children.length>1)return!1;const t=this.scroll.children.head;if(t?.statics.blotName!==Block.blotName)return!1;const e=t;return!(e.children.length>1)&&e.children.head instanceof Break}removeFormat(t,e){const n=this.getText(t,e),[r,s]=this.scroll.line(t+e);let l=0,i=new Delta;null!=r&&(l=r.length()-s,i=r.delta().slice(s,s+l-1).insert("\n"));const o=this.getContents(t,e+l).diff((new Delta).insert(n).concat(i)),c=(new Delta).retain(t).concat(o);return this.applyDelta(c)}update(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;const r=this.delta;if(1===e.length&&"characterData"===e[0].type&&e[0].target.data.match(ASCII)&&this.scroll.find(e[0].target)){const s=this.scroll.find(e[0].target),l=bubbleFormats(s),i=s.offset(this.scroll),o=e[0].oldValue.replace(CursorBlot.CONTENTS,""),c=(new Delta).insert(o),a=(new Delta).insert(s.value()),h=n&&{oldRange:shiftRange(n.oldRange,-i),newRange:shiftRange(n.newRange,-i)};t=(new Delta).retain(i).concat(c.diff(a,h)).reduce(((t,e)=>e.insert?t.insert(e.insert,l):t.push(e)),new Delta),this.delta=r.compose(t)}else this.delta=this.getDelta(),t&&isEqual(r.compose(t),this.delta)||(t=r.diff(this.delta,n));return t}}function convertListHTML(t,e,n){if(0===t.length){const[t]=getListType(n.pop());return e<=0?`</li></${t}>`:`</li></${t}>${convertListHTML([],e-1,n)}`}const[{child:r,offset:s,length:l,indent:i,type:o},...c]=t,[a,h]=getListType(o);if(i>e)return n.push(o),i===e+1?`<${a}><li${h}>${convertHTML(r,s,l)}${convertListHTML(c,i,n)}`:`<${a}><li>${convertListHTML(t,e+1,n)}`;const u=n[n.length-1];if(i===e&&o===u)return`</li><li${h}>${convertHTML(r,s,l)}${convertListHTML(c,i,n)}`;const[f]=getListType(n.pop());return`</li></${f}>${convertListHTML(t,e-1,n)}`}function convertHTML(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if("html"in t&&"function"==typeof t.html)return t.html(e,n);if(t instanceof TextBlot){return escapeText(t.value().slice(e,e+n)).replaceAll(" ","&nbsp;")}if(t instanceof ParentBlot){if("list-container"===t.statics.blotName){const r=[];return t.children.forEachAt(e,n,((t,e,n)=>{const s="formats"in t&&"function"==typeof t.formats?t.formats():{};r.push({child:t,offset:e,length:n,indent:s.indent||0,type:s.list})})),convertListHTML(r,-1,[])}const s=[];if(t.children.forEachAt(e,n,((t,e,n)=>{s.push(convertHTML(t,e,n))})),r||"list"===t.statics.blotName)return s.join("");const{outerHTML:l,innerHTML:i}=t.domNode,[o,c]=l.split(`>${i}<`);return"<table"===o?`<table style="border: 1px solid #000;">${s.join("")}<${c}`:`${o}>${s.join("")}<${c}`}return t.domNode instanceof Element?t.domNode.outerHTML:""}function combineFormats(t,e){return Object.keys(e).reduce(((n,r)=>{if(null==t[r])return n;const s=e[r];return s===t[r]?n[r]=s:Array.isArray(s)?s.indexOf(t[r])<0?n[r]=s.concat([t[r]]):n[r]=s:n[r]=[s,t[r]],n}),{})}function getListType(t){const e="ordered"===t?"ol":"ul";switch(t){case"checked":return[e,' data-list="checked"'];case"unchecked":return[e,' data-list="unchecked"'];default:return[e,""]}}function normalizeDelta(t){return t.reduce(((t,e)=>{if("string"==typeof e.insert){const n=e.insert.replace(/\r\n/g,"\n").replace(/\r/g,"\n");return t.insert(n,e.attributes)}return t.push(e)}),new Delta)}function shiftRange(t,e){let{index:n,length:r}=t;return new Range(n+e,r)}function splitOpLines(t){const e=[];return t.forEach((t=>{if("string"==typeof t.insert){t.insert.split("\n").forEach(((n,r)=>{r&&e.push({insert:"\n",attributes:t.attributes}),n&&e.push({insert:n,attributes:t.attributes})}))}else e.push(t)})),e}export default Editor;
//# sourceMappingURL=/sm/df336023be7d681e5c7a5a6401820b8ad5d3d82838975fa1b235cba4498abcf8.map